const material_Xas = new THREE.LineBasicMaterial({
	color: new THREE.Color(0xff0000)
});
const points_Xas = [];
points_Xas.push( new THREE.Vector3( 0, 0, 0 ) );
points_Xas.push( new THREE.Vector3( 10, 0, 0 ) );
const geometry3 = new THREE.BufferGeometry().setFromPoints( points_Xas );
const line_Xas = new THREE.Line( geometry3, material_Xas );
scene.add(line_Xas);

const material_Yas = new THREE.LineBasicMaterial({
	color: 0x0000ff
});
const points_Yas = [];
points_Yas.push( new THREE.Vector3( 0, 0, 0 ) );
points_Yas.push( new THREE.Vector3( 0, 10, 0 ) );
const geometry4 = new THREE.BufferGeometry().setFromPoints( points_Yas );
const line_Yas = new THREE.Line( geometry4, material_Yas );
scene.add(line_Yas);


const material_Zas = new THREE.LineBasicMaterial({
	color: 0x00ffff
});
const points_Zas = [];
points_Zas.push( new THREE.Vector3( 0, 0, 0 ) );
points_Zas.push( new THREE.Vector3( 0, 0, 10 ) );
const geometry5 = new THREE.BufferGeometry().setFromPoints( points_Zas );
const line_Zas = new THREE.Line( geometry5, material_Zas );
scene.add(line_Zas);


